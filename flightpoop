-- ADVANCED NOCLIP WITH WORKING MOBILE CONTROLS
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Configuration
local NoclipKey = Enum.KeyCode.N
local Speed = 25
local MaxSpeed = 100
local SpeedIncrement = 5
local isNoclipping = false
local isFlying = false
local MoveDirection = Vector3.new()
local CurrentSpeed = Speed

-- Detect if on mobile
local IS_MOBILE = UserInputService.TouchEnabled and not UserInputService.MouseEnabled and not UserInputService.KeyboardEnabled

-- Noclip function
local function ApplyNoclip()
    if not Player.Character then return end
    
    for _, part in pairs(Player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

-- Flight movement
local function Fly()
    if not Player.Character then return end
    local root = Player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    
    if MoveDirection.Magnitude > 0 then
        local camCF = Camera.CFrame
        local moveVector = (camCF.LookVector * MoveDirection.Z + camCF.RightVector * MoveDirection.X + Vector3.new(0, MoveDirection.Y, 0)) * (CurrentSpeed * 0.03)
        root.CFrame = root.CFrame + moveVector
    end
end

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "NoclipGui"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0, 200, 0, 40)
StatusLabel.Position = UDim2.new(0, 10, 0, 10)
StatusLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
StatusLabel.BackgroundTransparency = 0.5
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.Text = "NOCLIP: OFF\nSPEED: " .. Speed
StatusLabel.Font = Enum.Font.SourceSansBold
StatusLabel.TextSize = 14
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.TextYAlignment = Enum.TextYAlignment.Top
StatusLabel.Parent = ScreenGui

-- Mobile Controls
local MobileGui = Instance.new("ScreenGui")
MobileGui.Name = "MobileControls"
MobileGui.Parent = CoreGui
MobileGui.ResetOnSpawn = false
MobileGui.Enabled = IS_MOBILE

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 120, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -60, 0.9, -50)
ToggleButton.AnchorPoint = Vector2.new(0.5, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
ToggleButton.BackgroundTransparency = 0.3
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Text = "NOCLIP: OFF"
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 14
ToggleButton.Visible = IS_MOBILE
ToggleButton.Parent = MobileGui

local JoystickFrame = Instance.new("Frame")
JoystickFrame.Size = UDim2.new(0, 120, 0, 120)
JoystickFrame.Position = UDim2.new(0, 30, 0.7, -60)
JoystickFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
JoystickFrame.BackgroundTransparency = 0.7
JoystickFrame.BorderSizePixel = 0
JoystickFrame.Visible = IS_MOBILE
JoystickFrame.Parent = MobileGui

local JoystickInner = Instance.new("Frame")
JoystickInner.Size = UDim2.new(0, 40, 0, 40)
JoystickInner.Position = UDim2.new(0.5, -20, 0.5, -20)
JoystickInner.AnchorPoint = Vector2.new(0.5, 0.5)
JoystickInner.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
JoystickInner.BackgroundTransparency = 0.5
JoystickInner.BorderSizePixel = 0
JoystickInner.Parent = JoystickFrame

local UpButton = Instance.new("TextButton")
UpButton.Size = UDim2.new(0, 60, 0, 60)
UpButton.Position = UDim2.new(0.8, -30, 0.7, -90)
UpButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
UpButton.BackgroundTransparency = 0.7
UpButton.Text = "↑"
UpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
UpButton.Font = Enum.Font.SourceSansBold
UpButton.TextSize = 20
UpButton.Visible = IS_MOBILE
UpButton.Parent = MobileGui

local DownButton = Instance.new("TextButton")
DownButton.Size = UDim2.new(0, 60, 0, 60)
DownButton.Position = UDim2.new(0.8, -30, 0.7, 0)
DownButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
DownButton.BackgroundTransparency = 0.7
DownButton.Text = "↓"
DownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DownButton.Font = Enum.Font.SourceSansBold
DownButton.TextSize = 20
DownButton.Visible = IS_MOBILE
DownButton.Parent = MobileGui

-- Update GUI
local function UpdateGUI()
    StatusLabel.Text = "NOCLIP: " .. (isNoclipping and "ON" or "OFF") .. "\nSPEED: " .. CurrentSpeed
    if IS_MOBILE then
        ToggleButton.Text = "NOCLIP: " .. (isNoclipping and "ON" : "OFF")
        ToggleButton.BackgroundColor3 = isNoclipping and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
    end
end

-- Mobile Controls
local joystickActive = false
local joystickStartPos = Vector2.new()

JoystickFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        joystickActive = true
        joystickStartPos = Vector2.new(input.Position.X, input.Position.Y)
    end
end)

JoystickFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch and joystickActive then
        local currentPos = Vector2.new(input.Position.X, input.Position.Y)
        local delta = (currentPos - joystickStartPos) / 50
        delta = Vector2.new(math.clamp(delta.X, -1, 1), math.clamp(delta.Y, -1, 1))
        MoveDirection = Vector3.new(delta.X, 0, delta.Y)
        JoystickInner.Position = UDim2.new(0.5, delta.X * 30, 0.5, delta.Y * 30)
        isFlying = true
    end
end)

JoystickFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        joystickActive = false
        MoveDirection = Vector3.new(0, 0, 0)
        JoystickInner.Position = UDim2.new(0.5, -20, 0.5, -20)
        isFlying = false
    end
end)

UpButton.MouseButton1Down:Connect(function()
    MoveDirection = Vector3.new(MoveDirection.X, 1, MoveDirection.Z)
    isFlying = true
end)

UpButton.MouseButton1Up:Connect(function()
    MoveDirection = Vector3.new(MoveDirection.X, 0, MoveDirection.Z)
end)

DownButton.MouseButton1Down:Connect(function()
    MoveDirection = Vector3.new(MoveDirection.X, -1, MoveDirection.Z)
    isFlying = true
end)

DownButton.MouseButton1Up:Connect(function()
    MoveDirection = Vector3.new(MoveDirection.X, 0, MoveDirection.Z)
end)

ToggleButton.MouseButton1Click:Connect(function()
    isNoclipping = not isNoclipping
    UpdateGUI()
end)

-- Keyboard Controls
UserInputService.InputBegan:Connect(function(input, processed)
    if processed or IS_MOBILE then return end
    
    if input.KeyCode == NoclipKey then
        isNoclipping = not isNoclipping
        UpdateGUI()
        return
    end
    
    if not isNoclipping then return end
    
    local key = input.KeyCode
    if key == Enum.KeyCode.W then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, -1) isFlying = true
    elseif key == Enum.KeyCode.S then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, 1) isFlying = true
    elseif key == Enum.KeyCode.A then MoveDirection = Vector3.new(-1, MoveDirection.Y, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.D then MoveDirection = Vector3.new(1, MoveDirection.Y, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.Space then MoveDirection = Vector3.new(MoveDirection.X, 1, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.LeftControl then MoveDirection = Vector3.new(MoveDirection.X, -1, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.Equals then CurrentSpeed = math.min(CurrentSpeed + SpeedIncrement, MaxSpeed) UpdateGUI()
    elseif key == Enum.KeyCode.Minus then CurrentSpeed = math.max(CurrentSpeed - SpeedIncrement, 5) UpdateGUI()
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if processed or not isNoclipping or IS_MOBILE then return end
    
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.S then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, 0)
    elseif key == Enum.KeyCode.A or key == Enum.KeyCode.D then MoveDirection = Vector3.new(0, MoveDirection.Y, MoveDirection.Z)
    elseif key == Enum.KeyCode.Space or key == Enum.KeyCode.LeftControl then MoveDirection = Vector3.new(MoveDirection.X, 0, MoveDirection.Z)
    end
end)

-- Main loop
RunService.Stepped:Connect(function()
    if isNoclipping then
        ApplyNoclip()
        if isFlying then
            Fly()
        end
    end
end)

UpdateGUI()
print("ADVANCED NOCLIP LOADED!")
print("Press N to toggle noclip")
print("WASD + Space/Ctrl to fly")
print("+/= to increase speed, - to decrease speed")
