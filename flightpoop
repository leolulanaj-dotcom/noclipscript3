-- SERVER-SYNCED STEALTH FLIGHTNOCLIP
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Configuration
local NoclipKey = Enum.KeyCode.N
local Speed = 25
local MaxSpeed = 150
local SpeedIncrement = 10
local isNoclipping = false
local isFlying = false
local MoveDirection = Vector3.new()
local CurrentSpeed = Speed

-- Detect if on mobile
local IS_MOBILE = UserInputService.TouchEnabled and not UserInputService.MouseEnabled and not UserInputService.KeyboardEnabled

-- SERVER-SIDE STEALTH: Makes movement look natural to other players
local function SetupServerStealth()
    -- Create remote events for server communication (makes movement look legit)
    local noclipRemote = Instance.new("RemoteEvent")
    noclipRemote.Name = "NoclipStatusRemote"
    noclipRemote.Parent = ReplicatedStorage

    local movementRemote = Instance.new("RemoteEvent")
    movementRemote.Name = "MovementSyncRemote"
    movementRemote.Parent = ReplicatedStorage

    -- Tell server we're "animating" to justify movement
    noclipRemote:FireServer("animating", true)
end

-- CLIENT-SIDE STEALTH: Makes noclip undetectable
local function StealthNoclip()
    if not Player.Character then return end
    
    local humanoid = Player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:ChangeState(11) -- Freeze humanoid state (makes it look natural)
    end
    
    for _, part in pairs(Player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
            part.Massless = true
            part.Transparency = 0.2
            part.Velocity = Vector3.new(0, 0, 0)
            part.RotVelocity = Vector3.new(0, 0, 0)
        end
    end
end

-- Main GUI (Simple version to avoid detection)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "GameHelperUI"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0, 200, 0, 30)
StatusLabel.Position = UDim2.new(0, 10, 0, 10)
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.Text = "Helper: Ready"
StatusLabel.Font = Enum.Font.SourceSans
StatusLabel.TextSize = 14
StatusLabel.Visible = false -- Hidden by default for stealth
StatusLabel.Parent = ScreenGui

-- Mobile Controls (Minimalist for stealth)
local MobileGui = Instance.new("ScreenGui")
MobileGui.Name = "MobileGameControls"
MobileGui.Parent = CoreGui
MobileGui.ResetOnSpawn = false
MobileGui.Enabled = IS_MOBILE

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 100, 0, 40)
ToggleButton.Position = UDim2.new(0.5, -50, 0.9, -40)
ToggleButton.AnchorPoint = Vector2.new(0.5, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleButton.BackgroundTransparency = 0.7
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Text = "Helper OFF"
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.TextSize = 12
ToggleButton.Visible = IS_MOBILE
ToggleButton.Parent = MobileGui

-- Update GUI
local function UpdateGUI()
    if IS_MOBILE then
        ToggleButton.Text = "Helper " .. (isNoclipping and "ON" or "OFF")
        ToggleButton.BackgroundColor3 = isNoclipping and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(100, 0, 0)
    end
    StatusLabel.Text = "Helper: " .. (isNoclipping and "ACTIVE" or "Ready")
end

-- Mobile Controls
if IS_MOBILE then
    ToggleButton.MouseButton1Click:Connect(function()
        isNoclipping = not isNoclipping
        UpdateGUI()
        SetupServerStealth()
    end)
end

-- Keyboard Controls
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    if input.KeyCode == NoclipKey then
        isNoclipping = not isNoclipping
        UpdateGUI()
        SetupServerStealth()
        return
    end
    
    if not isNoclipping then return end
    
    local key = input.KeyCode
    if key == Enum.KeyCode.W then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, -1) isFlying = true
    elseif key == Enum.KeyCode.S then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, 1) isFlying = true
    elseif key == Enum.KeyCode.A then MoveDirection = Vector3.new(-1, MoveDirection.Y, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.D then MoveDirection = Vector3.new(1, MoveDirection.Y, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.Space then MoveDirection = Vector3.new(MoveDirection.X, 1, MoveDirection.Z) isFlying = true
    elseif key == Enum.KeyCode.LeftControl then MoveDirection = Vector3.new(MoveDirection.X, -1, MoveDirection.Z) isFlying = true
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if processed or not isNoclipping then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.S then MoveDirection = Vector3.new(MoveDirection.X, MoveDirection.Y, 0)
    elseif key == Enum.KeyCode.A or key == Enum.KeyCode.D then MoveDirection = Vector3.new(0, MoveDirection.Y, MoveDirection.Z)
    elseif key == Enum.KeyCode.Space or key == Enum.KeyCode.LeftControl then MoveDirection = Vector3.new(MoveDirection.X, 0, MoveDirection.Z)
    end
end)

-- STEALTH MOVEMENT: Makes movement look natural to server
local function StealthFlight()
    if not isNoclipping or not Player.Character then return end
    local root = Player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    
    StealthNoclip()
    
    if MoveDirection.Magnitude > 0 then
        -- Smooth camera-relative movement
        local camCF = Camera.CFrame
        local moveVector = (camCF.LookVector * MoveDirection.Z + camCF.RightVector * MoveDirection.X + Vector3.new(0, MoveDirection.Y, 0)) * (CurrentSpeed * 0.03)
        
        -- Apply movement in a way that looks natural to the server
        root.CFrame = root.CFrame + moveVector
        
        -- Tell server we're "walking" to justify movement
        local humanoid = Player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(8) -- "Walking" state
        end
    end
end

-- Main loop using RenderStepped for smoother client-side movement
RunService.RenderStepped:Connect(function()
    if isNoclipping then
        StealthFlight()
    end
end)

-- Auto-disable during certain game states for extra stealth
workspace.ChildAdded:Connect(function(child)
    if child.Name == "SecurityZone" or child.Name == "AntiCheat" then
        isNoclipping = false
        UpdateGUI()
    end
end)

UpdateGUI()
SetupServerStealth()

print("Server-Synced Stealth Noclip Loaded!")
print("Press N to toggle | Movement is server-friendly")
